# Koken configuration example
# Source: https://gist.github.com/bradleyboy/26ffd2ec7da68919ecd1

# Enable gzip. Highly recommending for best peformance
gzip on;
gzip_comp_level 6;
gzip_types text/css text/javascript application/json application/javascript application/x-javascript;

# By default, do not set expire headers
expires 0;

# Set expires header for console CSS and JS.
# These files are timestamped with each new release, so it is safe to cache them agressively.
location ~ "console_.*\.(js|css)$" {
    expires max;
}

# Catch image requests and pass them back to PHP if a cache does not yet exist
location ~ "^/storage/cache/images(/(([0-9]{3}/[0-9]{3})|custom)/.*)$" {
    # Cached images have timestamps in the URL, so it is safe to set
    # aggresive cache headers here.
    expires max;
    try_files $uri /i.php?path=$1;
}

# Catch settings.css.lens requests and serve cache when possible
location ~ settings.css.lens$ {
    default_type text/css;
    try_files /storage/cache/site/${uri} /app/site/site.php?url=/settings.css.lens;
}

# Catch koken.js requests and serve cache when possible
location ~ koken.js$ {
    default_type text/javascript;
    try_files /storage/cache/site/${uri} /app/site/site.php?url=/koken.js;
}

# Standard site requests are cached with .html extensions
set $cache_ext 'html';

# PJAX requests contain the _pjax GET parameter and are cached with .phtml extensions
if ($arg__pjax) {
    set $cache_ext 'phtml';
}

# If share_to_tumblr cookie is preset, disable caching (long story)
if ($http_cookie ~* "share_to_tumblr" ) {
    set $cache_ext 'nocache';
}

# Catch root requests
location ~ ^/?$ {
    try_files /storage/cache/site/index/cache.$cache_ext /app/site/site.php?url=/;
}

# All other requests get passed back to Koken unless file already exists
location / {
    try_files $uri $uri/ /storage/cache/site/${uri} /storage/cache/site/${uri}cache.$cache_ext /app/site/site.php?url=$uri;
}